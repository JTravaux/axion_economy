{"version":3,"sources":["hooks/useHolderData.js","assets/img/card_bg.jpg","views/ecosystem_breakdown/EcosystemStatCard.js","assets/img/tigershark.png","assets/img/shrimp.png","views/ecosystem_breakdown/EcosystemBreakdown.js","views/market_stats/MarketStatCard.js","hooks/useMarketData.js","assets/img/logo.png","views/market_stats/MarketStats.js","views/header/Header.js","views/resources/LinksAndResources.js","home.js","theme.js","index.js"],"names":["useHolderData","useState","currentData","setCurrentData","currentDataLoading","setCurrentDataLoading","history","setHistory","historyLoading","setHistoryLoading","useEffect","Promise","resolve","reject","fetch","then","result","json","res","catch","err","finally","AMOUNTS","min","max","seperator","StatCard","type","count","loading","emoji","isImage","src","imgWidth","total","ecoAxion","holders","Card","className","elevation","CardBG","width","alt","style","textAlign","padding","margin","Typography","variant","CircularProgress","size","color","fontWeight","toLocaleString","fontSize","verticalAlign","minimumFractionDigits","Divider","fontStyle","EcosystemBreakdown","ecosystem","key","shrimp","img","Shrip","totalAXN","totalAxn","crab","fish","octopus","dolphin","tigerShark","TigerShark","greatWhite","whale","align","totals","Tooltip","title","moment","last_updated","format","classes","tooltip","placement","cursor","maxWidth","Math","round","held_axn","Grid","container","justify","spacing","map","e","item","lg","md","xs","stat","amount","suffix","AXION_STAT_UPDATE_KEY","useMarketData","axnPerEth","setAxnPerEth","usdtPerAxn","setUsdtPerAxn","volumeUsd","setVolumeUsd","volumeEth","setVolumeEth","marketCap","setMarketCap","Date","now","lastUpdated","setLastUpdated","statUpdater","setStatUpdater","_getMarketStats","VOLUME_USD","usd","VOLUME_ETH","eth","_getAxnPerEth","axn","_getUsdtPerAxn","usdt","localStorage","getItem","startAutoUpdating","updater","setInterval","all","process","setItem","stopAutoUpdating","clearInterval","autoUpdating","Boolean","toggleAutoUpdating","MarketStats","paddingBottom","Logo","FormControlLabel","labelPlacement","control","Switch","checked","onChange","label","Number","currency","Header","anchorEl","setAnchorEl","theme","useTheme","enqueueSnackbar","useSnackbar","isSmall","useMediaQuery","breakpoints","down","openWebsite","window","open","openUniswap","AppBar","position","Toolbar","alignItems","onClick","display","Button","anchorOrigin","vertical","horizontal","autoHideDuration","IconButton","edge","event","currentTarget","keepMounted","onClose","MenuItem","OFFICIAL_LINKS","link","SOCIAL_LINKS","VIDEO_LINKS","length","LIVE_CHARTS","openWindow","url","LinkHeader","CustomAccordion","children","Accordion","marginBottom","AccordionSummary","expandIcon","AccordionDetails","FreeClaims","border","borderRadius","BigPayDays","Links","l","Wallets","Supply","Tokenomics","LinksAndResources","direction","Home","marginTop","opacity","createMuiTheme","typography","useNextVariants","fontFamily","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","success","text","disabled","hint","ReactDOM","render","StrictMode","maxSnack","preventDuplicate","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.6293126f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst useHolderData = () => {\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [currentDataLoading, setCurrentDataLoading] = useState(false);\r\n\r\n    const [history, setHistory] = useState([]);\r\n    const [historyLoading, setHistoryLoading] = useState(false);\r\n\r\n    const getEcosystemInfo = () => {\r\n        setCurrentData(true);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`ecosystem/holders/all`).then(result => {\r\n                result.json().then(res => {\r\n                    setCurrentData(res);\r\n                    resolve();\r\n                })\r\n            })\r\n            .catch(err => reject(err))\r\n            .finally(() => setCurrentDataLoading(false))\r\n        })\r\n    }\r\n\r\n     const getEcosystemHistory = () => {\r\n         setHistoryLoading(true);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`ecosystem/holders/history/24`).then(result => {\r\n                result.json().then(res => {\r\n                    setHistory(res);\r\n                    resolve();\r\n                })\r\n            })\r\n            .catch(err => reject(err))\r\n            .finally(() => setHistoryLoading(false))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEcosystemInfo();\r\n        getEcosystemHistory();\r\n    }, [])\r\n\r\n    return {\r\n        currentData,\r\n        currentDataLoading,\r\n\r\n        history,\r\n        historyLoading,\r\n    }\r\n}\r\n\r\n\r\nexport default useHolderData;","export default __webpack_public_path__ + \"static/media/card_bg.3a3b4dd1.jpg\";","import React from 'react';\r\nimport { Card, CircularProgress, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport CardBG from '../../assets/img/card_bg.jpg';\r\n\r\nconst AMOUNTS = {\r\n    \"Shrimp\": {min: 1, max: 999, seperator: \" to \" },\r\n    \"Crabs\": { min: 1000, max: 999999, seperator: \" to \" },\r\n    \"Fish\": { min: 1000000, max: 9999999, seperator: \" to \" },\r\n    \"Octopuses\": { min: 10000000, max: 49999999, seperator: \" to \" },\r\n    \"Dolphins\": { min: 50000000, max: 99999999, seperator: \" to \" },\r\n    \"Tiger Sharks\": { min: 100000000, max: 499999999, seperator: \" to \" },\r\n    \"Great Whites\": { min: 500000000, max: 999999999, seperator: \" to \" },\r\n    \"Whales\": { min: 1000000000, max: \"\", seperator: \"+\" }\r\n}\r\n\r\nconst StatCard = ({ type, count, loading, emoji, isImage, src, imgWidth, total, ecoAxion, holders }) => {\r\n\r\n    return(\r\n        <Card className=\"card\" elevation={6}>\r\n            <img src={CardBG} width=\"100%\" className=\"cardBG\" alt=\"card background\" />\r\n\r\n            <div style={{ textAlign: 'center', padding: '1%' }}>\r\n                <div style={{margin: '1%'}}>\r\n                    {isImage ? <img src={src} width={imgWidth} alt={type + \"_logo\"}/> : <Typography variant=\"h4\">{emoji}</Typography>}\r\n                </div>\r\n\r\n                {loading ? <CircularProgress size={30} style={{ margin: '4% 0' }} /> : (\r\n                    <div>\r\n                        <Typography variant=\"h6\" color=\"secondary\" style={{ fontWeight: '400' }}>\r\n                            {count?.toLocaleString()} {type}&nbsp;\r\n                            <span style={{ fontWeight: '200', fontSize: '0.8rem', verticalAlign: 'middle'}}>\r\n                                ({(count / holders).toLocaleString('en-US', { style: 'percent', minimumFractionDigits: 1 })})\r\n                            </span>\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"subtitle1\" color=\"secondary\" style={{ fontWeight: '400' }}>\r\n                            {total?.toLocaleString()} AXN&nbsp;\r\n                            <span style={{ fontWeight: '200', fontSize: '0.7rem', verticalAlign: 'middle' }}>\r\n                                ({(total / ecoAxion).toLocaleString('en-US', { style: 'percent', minimumFractionDigits: 2 })})\r\n                            </span>\r\n                        </Typography>\r\n\r\n                        <Divider variant=\"middle\" style={{margin: '2% auto', width: '75%'}}/>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: '400', fontStyle: 'italic' }}>\r\n                            {`${AMOUNTS[type].min.toLocaleString()}${AMOUNTS[type].seperator}${AMOUNTS[type].max?.toLocaleString()} AXN`}\r\n                        </Typography>\r\n                    </div>\r\n                )}\r\n            </div>\r\n          \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default StatCard;","export default __webpack_public_path__ + \"static/media/tigershark.d7e62b93.png\";","export default __webpack_public_path__ + \"static/media/shrimp.e7c432fb.png\";","import React from 'react';\r\nimport { Grid, Typography, Tooltip } from '@material-ui/core';\r\nimport useHolderData from '../../hooks/useHolderData';\r\nimport StatCard from './EcosystemStatCard.js';\r\nimport TigerShark from '../../assets/img/tigershark.png';\r\nimport Shrip from '../../assets/img/shrimp.png';\r\nimport moment from 'moment';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nconst EcosystemBreakdown = () => {\r\n    const { currentData , loading } = useHolderData();\r\n    \r\n    const ecosystem = [\r\n        { key: \"shrimp\", type: \"Shrimp\", count: currentData?.shrimp?.count, img: true, src: Shrip, width: 30, totalAXN: currentData?.shrimp?.totalAxn, color: '#e6194B' },\r\n        { key: \"crab\", type: \"Crabs\", count: currentData?.crab?.count, emoji: \"🦀\", totalAXN: currentData?.crab?.totalAxn, color: '#f58231'  },\r\n        { key: \"fish\", type: \"Fish\", count: currentData?.fish?.count, emoji: \"🐠\", totalAXN: currentData?.fish?.totalAxn, color: '#ffe119'  },\r\n        { key: \"octopus\", type: \"Octopuses\", count: currentData?.octopus?.count, emoji: \"🐙\", totalAXN: currentData?.octopus?.totalAxn, color: '#bfef45' },\r\n        { key: \"dolphin\", type: \"Dolphins\", count: currentData?.dolphin?.count, emoji: \"🐬\", totalAXN: currentData?.dolphin?.totalAxn, color: '#3cb44b'  },\r\n        { key: \"tigerShark\", type: \"Tiger Sharks\", count: currentData?.tigerShark?.count, img: true, src: TigerShark, width: 50, totalAXN: currentData?.tigerShark?.totalAxn, color: '#42d4f4' },\r\n        { key: \"greatWhite\", type: \"Great Whites\", count: currentData?.greatWhite?.count, emoji: \"🦈\", totalAXN: currentData?.greatWhite?.totalAxn, color: '#4363d8'  },\r\n        { key: \"whale\", type: \"Whales\", count: currentData?.whale?.count, emoji: \"🐳\", totalAXN: currentData?.whale?.totalAxn, color: '#911eb4'  },\r\n    ]\r\n\r\n    return (\r\n        <div style={{padding: '2%'}}>\r\n            <Typography variant=\"h4\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>\r\n                Axion Ecosystem  \r\n                {!loading && currentData.totals && (\r\n                   <sup>\r\n                        <Tooltip title={`Last Updated: ${moment(currentData.totals.last_updated).format(\"MMM Do, YYYY, h:mm a\")}. Ecosystem is updated hourly.`} classes={{ tooltip: 'tooltip' }} placement=\"right\">\r\n                            <InfoOutlinedIcon style={{ fontSize: '0.7rem', cursor: 'pointer' }} color=\"primary\" />\r\n                        </Tooltip>\r\n                   </sup>\r\n                )}\r\n            </Typography>\r\n\r\n            {!loading && currentData.totals && (\r\n                <>\r\n                    <Typography variant=\"subtitle1\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>{currentData.totals.holders.toLocaleString()} addresses hold at least 1 AXN.</Typography>\r\n                    \r\n                    <Tooltip title=\"Does not include contracts or dev fund\" classes={{ tooltip: 'tooltip' }} placement=\"bottom\">\r\n                        <Typography variant=\"subtitle1\" align=\"center\" color=\"primary\" style={{ fontWeight: '100', maxWidth: '325px', margin: '0 auto', cursor: 'pointer' }}>\r\n                            Ecosystem Total: {Math.round(currentData.totals.held_axn).toLocaleString()} AXN\r\n                        </Typography>\r\n                    </Tooltip>\r\n                </>\r\n            )}\r\n          \r\n            <div style={{margin: '2%'}}>\r\n                <Grid container justify=\"space-evenly\" spacing={3}>\r\n                    {ecosystem.map(e => (\r\n                        <Grid item lg={3} md={6} xs={10} key={e.type}>\r\n                            <StatCard \r\n                                type={e.type} \r\n                                count={e.count} \r\n                                loading={loading} \r\n                                emoji={e.emoji} \r\n                                isImage={e.img ?? false} \r\n                                src={e.img ? e.src : null} \r\n                                imgWidth={e.width} \r\n                                total={e.totalAXN} \r\n                                ecoAxion={currentData?.totals?.held_axn} \r\n                                holders={currentData?.totals?.holders}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EcosystemBreakdown;","import React from 'react';\r\nimport { Card, CircularProgress, Typography } from \"@material-ui/core\";\r\nimport CardBG from '../../assets/img/card_bg.jpg';\r\n\r\nconst StatCard = ({ stat, amount, loading, suffix }) => {\r\n\r\n    return(\r\n        <Card className=\"card\" elevation={6}>\r\n            <img src={CardBG} width=\"100%\" className=\"cardBG\" alt=\"card background\"/>\r\n\r\n            <div style={{ textAlign: 'center', padding: '1%' }}>           \r\n                <div>\r\n                    <Typography variant=\"h6\" color=\"secondary\" style={{ fontWeight: '400' }}>{stat}</Typography>\r\n                    {loading ? <CircularProgress size={23} /> : (\r\n                        <Typography variant=\"subtitle1\" color=\"secondary\" style={{ fontWeight: '400' }}>{amount} {suffix}</Typography>\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n          \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default StatCard;","import { useEffect, useState } from 'react'\r\n\r\nconst AXION_STAT_UPDATE_KEY = \"AxionStats_AutoUpdate\";\r\n\r\nconst useMarketData = () => {\r\n    const [axnPerEth, setAxnPerEth] = useState(0);\r\n    const [usdtPerAxn, setUsdtPerAxn] = useState(0);\r\n    const [volumeUsd, setVolumeUsd] = useState(0);\r\n    const [volumeEth, setVolumeEth] = useState(0);\r\n    const [marketCap, setMarketCap] = useState(0);\r\n    const [lastUpdated, setLastUpdated] = useState(Date.now());\r\n    const [statUpdater, setStatUpdater] = useState(null);\r\n\r\n    const _getMarketStats = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`stats/volume`).then(result => {\r\n                result.json().then(res => {\r\n                    const VOLUME_USD = res.usd\r\n                    const VOLUME_ETH = res.eth\r\n\r\n                    setVolumeUsd(VOLUME_USD);\r\n                    setVolumeEth(VOLUME_ETH);\r\n                    resolve();\r\n                })\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const _getAxnPerEth = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`stats/axn-eth`).then(result => {\r\n                result.json().then(res => {\r\n                    setAxnPerEth(res.axn);\r\n                    resolve();\r\n                })\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const _getUsdtPerAxn = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`/stats/usdt-axn`).then(result => {\r\n                result.json().then(res => {\r\n                    setUsdtPerAxn(res.usdt);\r\n                    setMarketCap(res.usdt * 250000000000)\r\n                    resolve();\r\n                })\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        _getAxnPerEth();\r\n        _getUsdtPerAxn();\r\n        _getMarketStats();\r\n\r\n        if (!statUpdater && localStorage.getItem(AXION_STAT_UPDATE_KEY) === \"1\") {\r\n            startAutoUpdating();\r\n            if (process.env.NODE_ENV === \"development\")\r\n                console.log(\"Started stat updater.\")\r\n        }\r\n    // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const startAutoUpdating = () => {\r\n        const updater = setInterval(() => {\r\n            const settingConfirm = localStorage.getItem(AXION_STAT_UPDATE_KEY)\r\n            if (settingConfirm === \"1\") {\r\n                Promise.all([_getAxnPerEth(), _getUsdtPerAxn(), _getMarketStats()]).then(res => {\r\n                    setLastUpdated(Date.now())\r\n                    if (process.env.NODE_ENV === \"development\")\r\n                        console.log(\"Completed stat update\")\r\n                }).catch(err => {\r\n                    if (process.env.NODE_ENV === \"development\")\r\n                        console.log(\"Auto Updating Error:\", err)\r\n                })\r\n            }\r\n        }, 7500)\r\n\r\n        setStatUpdater(updater);\r\n        localStorage.setItem(AXION_STAT_UPDATE_KEY, \"1\")\r\n    }\r\n\r\n    const stopAutoUpdating = () => {\r\n        clearInterval(statUpdater);\r\n        setStatUpdater(null);\r\n        localStorage.setItem(AXION_STAT_UPDATE_KEY, \"0\")\r\n    }\r\n\r\n    const toggleAutoUpdating = () => {\r\n        if (statUpdater)\r\n            stopAutoUpdating();\r\n        else\r\n            startAutoUpdating();\r\n    }\r\n\r\n    return {\r\n        volumeUsd,\r\n        volumeEth,\r\n        axnPerEth,\r\n        marketCap,\r\n        usdtPerAxn,\r\n        lastUpdated,\r\n        autoUpdating: Boolean(statUpdater),\r\n        stopAutoUpdating,\r\n        startAutoUpdating,\r\n        toggleAutoUpdating,\r\n    }\r\n}\r\n\r\nexport default useMarketData;","export default __webpack_public_path__ + \"static/media/logo.5ad1b7a7.png\";","import React from 'react';\r\nimport moment from 'moment';\r\nimport StatCard from './MarketStatCard.js';\r\nimport useMarketData from '../../hooks/useMarketData';\r\nimport { Grid, Switch, Typography, FormControlLabel } from '@material-ui/core';\r\nimport Logo from '../../assets/img/logo.png';\r\n\r\nconst MarketStats = () => {\r\n    const { \r\n        volumeUsd,\r\n        marketCap,\r\n        axnPerEth, \r\n        usdtPerAxn, \r\n        lastUpdated,\r\n        autoUpdating,\r\n        toggleAutoUpdating\r\n    } = useMarketData();\r\n\r\n    return (\r\n        <div style={{ padding: '2%', paddingBottom: 0 }}>\r\n\r\n            <center>\r\n                <img src={Logo} width={60} alt=\"logo\"/>\r\n            </center>\r\n            \r\n            <Typography variant=\"h4\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>Axion Market Stats</Typography>\r\n\r\n            <center>\r\n                <FormControlLabel labelPlacement=\"start\" control={<Switch size=\"small\" checked={autoUpdating} onChange={toggleAutoUpdating} />} label={<Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: '400' }}>Automatically update stats</Typography>} />\r\n                <br/>\r\n\r\n                {lastUpdated && (\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: '400' }}>\r\n                        Last Updated: {moment(lastUpdated).format(\"h:mm:ss a\")}\r\n                    </Typography>\r\n                )}\r\n            </center>\r\n\r\n            <div style={{ margin: '2%' }}>\r\n                <Grid container justify=\"space-evenly\" spacing={3}>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"USDTPrice\">\r\n                        <StatCard loading={Boolean(!usdtPerAxn)} stat=\"Current Price\" amount={`$${usdtPerAxn}`} suffix=\"USDT\" />\r\n                    </Grid>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"pricePerETH\">\r\n                        <StatCard loading={Boolean(!axnPerEth)} stat=\"Axion Per ETH\" amount={Number(axnPerEth).toLocaleString()} suffix=\"AXN\"/>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"marketCap\">\r\n                        <StatCard loading={Boolean(!marketCap)} stat=\"Market Cap\" amount={`${marketCap.toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}`} suffix=\"USD\" />\r\n                    </Grid>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"volume_ETH\">\r\n                        <StatCard loading={Boolean(!volumeUsd)} stat=\"24h Volume\" amount={Number(volumeUsd).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })} suffix=\"USD\"/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketStats;","import React, { useState } from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Typography, AppBar, Toolbar, IconButton, Grid, Menu, MenuItem, Button } from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\nimport moment from 'moment'\r\nconst Header = () => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n   \r\n    const theme = useTheme();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const openWebsite = () => window.open(\"https://axion.network\", \"_blank\");\r\n    const openUniswap = () => window.open(\"https://app.uniswap.org/#/swap?outputCurrency=0xed1199093b1abd07a368dd1c0cdc77d8517ba2a0\", \"_blank\");\r\n    const openReferral = () => enqueueSnackbar(\"Coming soon!\", { variant: 'info', anchorOrigin: { vertical: 'bottom', horizontal: 'right', autoHideDuration: 3000 }}); //window.open(\"https://discord.gg/axion\", \"_blank\");\r\n\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget) }\r\n    const handleClose = () => { setAnchorEl(null) }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className=\"navBar\" elevation={10} >\r\n                <Toolbar>\r\n\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h5\" align=\"center\" color=\"primary\" style={{ fontWeight: '100', color: \"#FFF\" }}>Axion Stats</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {!isSmall && (\r\n                                <div className=\"headerLinks\">\r\n                                    <Typography onClick={openWebsite} variant=\"subtitle2\" style={{ color: \"#FFF\" }} display=\"inline\" className=\"clickableLink noselect\">Axion Website</Typography>\r\n                                    <Typography onClick={openUniswap} variant=\"subtitle2\" style={{ color: \"#FFF\" }} display=\"inline\" className=\"clickableLink noselect\">Buy Axion (Uniswap)</Typography>\r\n\r\n                                    <Button onClick={openReferral} variant=\"contained\" color=\"secondary\" className=\"referralButton\">\r\n                                        <Typography variant=\"subtitle2\">Buy Axion, Get 10% Bonus</Typography>\r\n                                    </Button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {isSmall && (<>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleClick}>\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n\r\n                                <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\r\n                                    <MenuItem onClick={openWebsite}>Axion Website</MenuItem>\r\n                                    <MenuItem onClick={openUniswap}>Buy Axion</MenuItem>\r\n                                </Menu>\r\n                            </>)}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n     \r\n    \r\n        // <div className=\"header\">\r\n        //     <Typography align=\"center\" variant=\"subtitle2\" style={{ color: \"#FFF\" }}>Beta {VERSION} - Created by<span style={{ color: '#00D637' }}> Some Green Guy</span></Typography>\r\n            \r\n        //     <div className=\"headerLinks\">\r\n        //         <Typography onClick={openWebsite} variant=\"subtitle2\" style={{ color: \"#FFF\" }} display=\"inline\" className=\"clickableLink\">Axion Website</Typography>\r\n                \r\n        //         <span style={{ color: \"#BABABA\" }}>&nbsp;|&nbsp;</span>\r\n                \r\n        //         <Typography onClick={openWhitepaper} variant=\"subtitle2\" style={{ color: \"#FFF\" }} display=\"inline\" className=\"clickableLink\">Whitepaper</Typography>\r\n                \r\n        //         <span style={{ color: \"#BABABA\" }}>&nbsp;|&nbsp;</span>\r\n                \r\n        //         <Typography onClick={openDiscord} variant=\"subtitle2\" style={{ color: \"#FFF\" }} display=\"inline\" className=\"clickableLink\">Discord</Typography>\r\n\r\n        //         <span style={{ color: \"#BABABA\" }}>&nbsp;|&nbsp;</span>\r\n\r\n        //         <Typography onClick={openUniswap} variant=\"subtitle2\" style={{ color: \"#FFF\" }} display=\"inline\" className=\"clickableLink\">Uniswap</Typography>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Typography, Accordion, AccordionSummary, AccordionDetails, Grid, Divider } from '@material-ui/core';\r\nimport useMarketData from '../../hooks/useMarketData';\r\n\r\nconst OFFICIAL_LINKS = [\r\n    { link: \"https://axion.network/\", title: \"Homepage\" },\r\n    { link: \"https://axion.network/\", title: \"Staking Portal\" },\r\n    { link: \"https://axion.network/pdf/axion-whitepaper.pdf\", title: \"Whitepaper\" },\r\n    { link: \"https://axion.network/pdf/axion-audit.pdf\", title: \"Hacken Audit\" },\r\n]\r\n\r\nconst SOCIAL_LINKS = [\r\n    { link: \"https://axionnetwork.medium.com/\", title: \"Blog\" },\r\n    { link: \"https://www.relaxionwithaxion.com/\", title: \"News\" },\r\n    { link: \"https://twitter.com/axion_network\", title: \"Twitter\" },\r\n    { link: \"https://t.me/axionofficial\", title: \"Telegram\" },\r\n    { link: \"https://discord.gg/axion\", title: \"Discord\" },\r\n    { link: \"https://github.com/Rock-n-Block/axion-contracts\", title: \"GitHub\" },\r\n]\r\n\r\nconst VIDEO_LINKS = [\r\n    { link: \"https://www.youtube.com/watch?v=-ILQ1M5KS68&ab_channel=Numberofthings\", title: \"What is Axion?\", length: \"2:06\" },\r\n    { link: \"https://www.youtube.com/watch?v=mlGwBPltsK8&ab_channel=Numberofthings\", title: \"Brief Axion Overview\", length: \"1:42\"  },\r\n    { link: \"https://www.youtube.com/watch?v=qfCftkf-svQ\", title: \"Axion Promotional Video\", length: \"0:29\" },\r\n    { link: \"https://www.youtube.com/watch?v=hj5ZewGkAOA\", title: \"Axion Intro for Beginners\", length: \"11:00\" },\r\n    { link: \"https://www.youtube.com/watch?v=B4lzW02pwew&ab_channel=AxionToken\", title: \"Whitepaper Explained\", length: \"50:29\" },\r\n]\r\n\r\nconst LIVE_CHARTS = [\r\n    { link: \"https://www.dextools.io/app/uniswap/pair-explorer/0xedaedd22e653c504ff6806bf61664292848eb26e\", title: \"DexTools.io\" },\r\n    { link: \"https://chartex.pro/?symbol=UNISWAP:HEX2T&theme=Dark\", title: \"ChartEx.pro\" },\r\n    { link: \"https://charts.cointrader.pro/charts.html?coin=HEX2T%3AUSDk\", title: \"CoinTrader.pro (AXN/USD)\" },\r\n    { link: \"https://charts.cointrader.pro/charts.html?coin=HEX2T%3ABTC\", title: \"CoinTrader.pro (AXN/BTC)\" },\r\n]\r\n\r\nconst openWindow = url => { window.open(url + \"?utm_source=AxionStats.info\", \"_blank\") }\r\n\r\nconst LinkHeader = ({title}) => {\r\n    return (\r\n        <>\r\n            <Divider variant=\"middle\" style={{ margin: '2%' }} />\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"secondary\" style={{ fontWeight: '400' }}>{title}</Typography>\r\n            <Divider variant=\"middle\" style={{ margin: '2%' }} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst CustomAccordion = ({title, children}) => {\r\n    return (\r\n        <Accordion elevation={6} style={{marginBottom: '2%'}}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>{title}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                {children}\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nconst FreeClaims = () => {\r\n    const { usdtPerAxn } = useMarketData();\r\n\r\n    return (\r\n        <CustomAccordion title=\"How Do HEX Freeclaims Work?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                HEX Freeclaims will be available over a 350 day period, beginning at launch of mainnet.\r\n                Each ETH address containing HEX on May 28th, 2020, staked or unstaked, will be able to claim <strong>free Axion</strong> at a value of 1:1 for your HEX balance with a <strong>maximum cap of 10 million tokens</strong>.\r\n                At today's prices, that's up to ${Number(10000000 * usdtPerAxn).toLocaleString()}!\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Day 1 claims will begin at a rate of 100% of your HEX balance, with each successive week decreasing by cumulative 2% (0.2857% penalty applied daily).\r\n                If you missed the available freeclaim period (After Day 350), you would receive 0% (0 Axion) and all of your freeclaim amount would be sent to the auction pool.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" style={{ border: '1px dashed rgba(0,0,0, 0.54)', borderRadius: '10px', padding: '1%' }}>\r\n                Penalty = (HEX + Shares amount) * (days since freeclaim starts/350)\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Example: If your ETH address contained Hex balance of 100,000 and you choose to claim on Day #1 you will receive 100,000 Axion and no Axion will be sent to the auction pool.\r\n                If you wait to claim until Day #14 you would receive 96% or 96,000 Axion and remaining 4,000 Axion would be sent to the auction pool. Day #21 = 94%, Day #28 = 92%, and so on.\r\n            </Typography>\r\n        </CustomAccordion>  \r\n    )\r\n}\r\n\r\nconst BigPayDays = () => {\r\n    return (\r\n        <CustomAccordion title=\"What Are Big Pay Days (BPD)?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Axion has 5 different \"BigPayDays\".\r\n                The concept of having a BigPayDay is to allocate the unclaimed freeclaim Axion tokens to the stakers at the BigPayDays. Each of these days is exactly 350 days apart.\r\n                BigPayDay funding comes from 0.2857% (1/350) of the unclaimed Axion.\r\n                            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                On BigPayDays which happen once every year (for 5 years), all tokens in the BigPayDay pool are added to the Payout Pool for that day.\r\n                Stakers who are staked on that day are entitled to payout based on how much of the share pool they own.\r\n                            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Only stakes which are staked for periods above 350 days, and are active once BPD hits, will be eligible for the BigPayDay Payout.\r\n                This means if you stake 3 days before the BPD, for a total period of at LEAST 350 days, you would be eligible for the BigPayDay, and will recieve that bonus when your stake ends.\r\n                            </Typography>\r\n            <LinkHeader title=\"Distribution Amounts\" />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 1: 10% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 2: 15% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 3: 20% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 4: 25% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 5: 30% of the BPD Tokens are distributed</Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Links = () => {\r\n    return (\r\n        <CustomAccordion title=\"A Lot of Helpful Links...\">\r\n            <Grid container>\r\n                <Grid item xs={12}><LinkHeader title=\"Official Links\" /></Grid>\r\n                {OFFICIAL_LINKS.map(l => <Grid item xs={6}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLink\">{l.title}</Typography></Grid>)}\r\n\r\n                <Grid item xs={12}><LinkHeader title=\"Social Links\" /></Grid>\r\n                {SOCIAL_LINKS.map(l => <Grid item xs={6}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLink\">{l.title}</Typography> </Grid>)}\r\n\r\n                <Grid item xs={12}><LinkHeader title=\"Videos from the Community\" /></Grid>\r\n                {VIDEO_LINKS.map(l => <Grid item xs={12}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLinkDense\">{l.title} ({l.length})</Typography></Grid>)}\r\n\r\n                <Grid item xs={12}><LinkHeader title=\"Live Charts\" /></Grid>\r\n                {LIVE_CHARTS.map(l => <Grid item xs={6}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLink\">{l.title}</Typography></Grid>)}\r\n            </Grid>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Wallets = () => {\r\n    return (\r\n        <CustomAccordion title=\"Which Wallets Can I Use?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Axion's mainnet token is ERC20. \r\n                Our recommended wallet would be <span className=\"textLink\" onClick={() => openWindow(\"https://metamask.io/\")}>Metamask</span> as it will be <strong>the only supported wallet initially</strong>. \r\n                Other wallets will be supported after. As for mobile users, use the Metamask mobile app.\r\n            </Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Supply = () => {\r\n    return (\r\n        <CustomAccordion title=\"What is the Maximum Supply?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Max supply of the presale token HEX2T is 250 Billion, which will be converted 1:1 on mainnet launch, and another 250 Billion will be allocated to HEX freeclaims &amp; auctions, for a initial total supply of 500 Billion Axion. \r\n            </Typography>\r\n            <br/>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                The additional 250B for freeclaims and auctions will enter the supply slowly. \r\n                The only other coins that will come into existence after distribution phase are the coins created by the 8% inflation rate, 100% of coins created through inflation are given to stakers.\r\n            </Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Tokenomics = () => {\r\n    return (\r\n        <CustomAccordion title=\"Axion Tokenomics Overview\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>If HEX2T converted Axion tokens go unclaimed, they go up for auction.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>Every week that HEX2T tokens go unconverted, the HEX2T holder loses 2% of the total amount they receive from conversion.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>This 2% is added into the auction.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>People can bid ETH into the auction pool to purchase the Axion. Whatever % of the auction pool value they have bid, that is the % of the Axion pool they will earn.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>80% of all ETH bid into the auction pool is used to buy back Axion tokens on exchanges, increasing the value.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>The tokens that are bought back, are then distributed to stakers.</Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst LinksAndResources = () => {\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>Frequently Asked Questions</Typography>\r\n            <Grid container spacing={2} style={{width: '90%', margin: '2% auto' }}>\r\n                <Grid item md={6} xs={12} container direction=\"column\">\r\n                    <Links/>\r\n                    <Wallets/>\r\n                    <Supply/>\r\n                </Grid>\r\n                <Grid item md={6} xs={12} container direction=\"column\">\r\n                    <FreeClaims />\r\n                    <BigPayDays />\r\n                    <Tokenomics/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinksAndResources;","import React from 'react';\r\nimport EcosystemBreakdown from './views/ecosystem_breakdown/EcosystemBreakdown';\r\nimport MarketStats from './views/market_stats/MarketStats';\r\nimport Header from './views/header/Header'\r\nimport { Typography } from '@material-ui/core';\r\nimport LinksAndResources from './views/resources/LinksAndResources';\r\n\r\nconst VERSION = \"v0.9.2\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <MarketStats/>\r\n            <EcosystemBreakdown/>\r\n            <LinksAndResources/>\r\n\r\n            <div style={{ margin: '1%', textAlign: 'right', marginTop: 0, opacity: 0.85 }}>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: 200 }}>Beta: {VERSION} ✳️</Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: 200 }}>By Some Green Guy</Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n        fontFamily: \"Poppins, sans-serif\",\r\n    },\r\n    palette: {\r\n        common: {\r\n            black: \"#000\",\r\n            white: \"#fff\"\r\n        },\r\n        background: {\r\n            paper: \"#EAEEF7\",\r\n            default: \"#EAEEF7\"\r\n        },\r\n        primary: {\r\n            light: \"#4c598e\",\r\n            main: \"#4c598e\",\r\n            dark: \"#6D7BB9\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        secondary: {\r\n            fontFamily: \"Roberto, sans-serif\",\r\n            light: \"#8E9CDA\",\r\n            main: \"#6D7BB9\",\r\n            dark: \"#505E9B\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        error: {\r\n            light: \"#ff9caa\",\r\n            main: \"#ff7285\",\r\n            dark: \"#b3505d\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        success: {\r\n            light: \"#6dc762\",\r\n            main: \"#09af00\",\r\n            dark: \"#007d00\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        text: {\r\n            primary: \"rgba(0,0,0, 0.87)\",\r\n            secondary: \"rgba(0,0,0, 0.54)\",\r\n            disabled: \"rgba(0,0,0, 0.38)\",\r\n            hint: \"rgba(0,0,0, 0.38)\"\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport Home from './home';\nimport theme from './theme';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider maxSnack={3} preventDuplicate>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline>\n          <Home />\n        </CssBaseline>\n      </MuiThemeProvider>\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}