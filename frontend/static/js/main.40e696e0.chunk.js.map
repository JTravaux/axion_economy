{"version":3,"sources":["hooks/useHolderData.js","assets/img/card_bg.jpg","views/ecosystem_breakdown/EcosystemStatCard.js","assets/img/tigershark.png","assets/img/shrimp.png","views/ecosystem_breakdown/EcosystemBreakdown.js","views/market_stats/MarketStatCard.js","hooks/useMarketData.js","assets/img/logo.png","views/market_stats/MarketStats.js","views/header/BuyAxionAuctionModal.js","views/header/Header.js","views/resources/LinksAndResources.js","assets/img/eden.jpg","assets/img/eden-logo.png","views/tree_stats/TreeStats.js","home.js","theme.js","index.js"],"names":["useHolderData","useState","currentData","setCurrentData","currentDataLoading","setCurrentDataLoading","history","setHistory","historyLoading","setHistoryLoading","useEffect","Promise","resolve","reject","fetch","then","result","json","res","catch","err","finally","AMOUNTS","min","max","seperator","StatCard","type","count","loading","emoji","isImage","src","imgWidth","total","ecoAxion","holders","Card","className","elevation","CardBG","width","alt","style","textAlign","padding","margin","Typography","variant","CircularProgress","size","color","fontWeight","toLocaleString","fontSize","verticalAlign","minimumFractionDigits","Divider","fontStyle","EcosystemBreakdown","ecosystem","key","shrimp","img","Shrip","totalAXN","totalAxn","crab","fish","octopus","dolphin","tigerShark","TigerShark","greatWhite","whale","paddingBottom","align","totals","Tooltip","title","moment","last_updated","format","classes","tooltip","placement","cursor","maxWidth","Math","round","held_axn","Grid","container","justify","spacing","map","e","item","lg","md","xs","stat","amount","suffix","AXION_STAT_UPDATE_KEY","useMarketData","autoUpdating","axnPerEth","setAxnPerEth","usdtPerAxn","setUsdtPerAxn","volumeUsd","setVolumeUsd","volumeEth","setVolumeEth","marketCap","setMarketCap","Date","now","lastUpdated","setLastUpdated","statUpdater","setStatUpdater","_getMarketStats","VOLUME_USD","usd","VOLUME_ETH","eth","_getAxnPerEth","axn","_getUsdtPerAxn","usdt","document","_getCirculatingSupply","a","market_cap","localStorage","getItem","startAutoUpdating","updater","setInterval","all","process","setItem","stopAutoUpdating","clearInterval","toggleAutoUpdating","Boolean","MarketStats","Logo","FormControlLabel","labelPlacement","control","Switch","checked","onChange","label","Number","currency","BuyAxionAuctionModal","isOpen","close","Dialog","open","onClose","position","top","right","IconButton","onClick","DialogContent","window","Button","fullWidth","autoFocus","textTransform","Header","anchorEl","setAnchorEl","modalOpen","setModalOpen","theme","useTheme","isSmall","useMediaQuery","breakpoints","down","openWebsite","openReferral","AppBar","Toolbar","alignItems","display","edge","event","currentTarget","keepMounted","MenuItem","OFFICIAL_LINKS","link","SOCIAL_LINKS","VIDEO_LINKS","length","LIVE_CHARTS","openWindow","url","newURL","includes","LinkHeader","CustomAccordion","children","Accordion","marginBottom","AccordionSummary","expandIcon","AccordionDetails","FreeClaims","border","borderRadius","BigPayDays","Links","l","Wallets","Supply","Tokenomics","LinksAndResources","direction","MESSAGE","col1","col2","TreeStats","numTrees","setNumTrees","amountDonated","setAmountDonated","ethDonated","setEthDonated","isMedium","_fetchTreeCount","res_json","trees","eden","start","end","delay","countUpRef","innerRef","marginTop","m","edenLoogo","Home","opacity","createMuiTheme","typography","useNextVariants","fontFamily","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","success","text","disabled","hint","ReactDOM","render","StrictMode","maxSnack","preventDuplicate","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.40e696e0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst useHolderData = () => {\r\n    const [currentData, setCurrentData] = useState([]);\r\n    const [currentDataLoading, setCurrentDataLoading] = useState(false);\r\n\r\n    const [history, setHistory] = useState([]);\r\n    const [historyLoading, setHistoryLoading] = useState(false);\r\n\r\n    const getEcosystemInfo = () => {\r\n        setCurrentDataLoading(true);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`ecosystem/holders/all`).then(result => {\r\n                result.json().then(res => {\r\n                    setCurrentData(res);\r\n                    resolve();\r\n                })\r\n            })\r\n            .catch(err => reject(err))\r\n            .finally(() => setCurrentDataLoading(false))\r\n        })\r\n    }\r\n\r\n     const getEcosystemHistory = () => {\r\n         setHistoryLoading(true);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`ecosystem/holders/history/24`).then(result => {\r\n                result.json().then(res => {\r\n                    setHistory(res);\r\n                    resolve();\r\n                })\r\n            })\r\n            .catch(err => reject(err))\r\n            .finally(() => setHistoryLoading(false))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getEcosystemInfo();\r\n        getEcosystemHistory();\r\n    }, [])\r\n\r\n    return {\r\n        currentData,\r\n        currentDataLoading,\r\n\r\n        history,\r\n        historyLoading,\r\n    }\r\n}\r\n\r\n\r\nexport default useHolderData;","export default __webpack_public_path__ + \"static/media/card_bg.3a3b4dd1.jpg\";","import React from 'react';\r\nimport { Card, CircularProgress, Divider, Grid, Typography } from \"@material-ui/core\";\r\nimport CardBG from '../../assets/img/card_bg.jpg';\r\n\r\nconst AMOUNTS = {\r\n    \"Shrimp\": {min: 1, max: 999, seperator: \" to \" },\r\n    \"Crabs\": { min: 1000, max: 999999, seperator: \" to \" },\r\n    \"Fish\": { min: 1000000, max: 9999999, seperator: \" to \" },\r\n    \"Octopuses\": { min: 10000000, max: 49999999, seperator: \" to \" },\r\n    \"Dolphins\": { min: 50000000, max: 99999999, seperator: \" to \" },\r\n    \"Tiger Sharks\": { min: 100000000, max: 499999999, seperator: \" to \" },\r\n    \"Great Whites\": { min: 500000000, max: 999999999, seperator: \" to \" },\r\n    \"Whales\": { min: 1000000000, max: \"\", seperator: \"+\" }\r\n}\r\n\r\nconst StatCard = ({ type, count, loading, emoji, isImage, src, imgWidth, total, ecoAxion, holders }) => {\r\n\r\n    return(\r\n        <Card className=\"card\" elevation={6}>\r\n            <img src={CardBG} width=\"100%\" className=\"cardBG\" alt=\"card background\" />\r\n\r\n            <div style={{ textAlign: 'center', padding: '1%' }}>\r\n                <div style={{margin: '1%'}}>\r\n                    {isImage ? <img src={src} width={imgWidth} alt={type + \"_logo\"}/> : <Typography variant=\"h4\">{emoji}</Typography>}\r\n                </div>\r\n\r\n                {loading ? <CircularProgress size={30} style={{ margin: '4% 0' }} /> : (\r\n                    <div>\r\n                        <Typography variant=\"h6\" color=\"secondary\" style={{ fontWeight: '400' }}>\r\n                            {count?.toLocaleString()} {type}&nbsp;\r\n\r\n                            {holders > 0 && (\r\n                                <span style={{ fontWeight: '200', fontSize: '0.8rem', verticalAlign: 'middle' }}>\r\n                                    ({(count / holders).toLocaleString('en-US', { style: 'percent', minimumFractionDigits: 1 })})\r\n                                </span>\r\n                            )}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"subtitle1\" color=\"secondary\" style={{ fontWeight: '400' }}>\r\n                            {total?.toLocaleString()} AXN&nbsp;\r\n\r\n                            {ecoAxion > 0 && (\r\n                                <span style={{ fontWeight: '200', fontSize: '0.7rem', verticalAlign: 'middle' }}>\r\n                                    ({(total / ecoAxion).toLocaleString('en-US', { style: 'percent', minimumFractionDigits: 2 })})\r\n                                </span>\r\n                            )}\r\n                           \r\n                        </Typography>\r\n\r\n                        <Divider variant=\"middle\" style={{margin: '2% auto', width: '75%'}}/>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: '400', fontStyle: 'italic' }}>\r\n                            {`${AMOUNTS[type].min.toLocaleString()}${AMOUNTS[type].seperator}${AMOUNTS[type].max?.toLocaleString()} AXN`}\r\n                        </Typography>\r\n                    </div>\r\n                )}\r\n            </div>\r\n          \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default StatCard;","export default __webpack_public_path__ + \"static/media/tigershark.d7e62b93.png\";","export default __webpack_public_path__ + \"static/media/shrimp.e7c432fb.png\";","import React from 'react';\r\nimport { Grid, Typography, Tooltip } from '@material-ui/core';\r\nimport useHolderData from '../../hooks/useHolderData';\r\nimport StatCard from './EcosystemStatCard.js';\r\nimport TigerShark from '../../assets/img/tigershark.png';\r\nimport Shrip from '../../assets/img/shrimp.png';\r\nimport moment from 'moment';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nconst EcosystemBreakdown = () => {\r\n    const { currentData , currentDataLoading } = useHolderData();\r\n    \r\n    const ecosystem = [\r\n        { key: \"shrimp\", type: \"Shrimp\", count: currentData?.shrimp?.count, img: true, src: Shrip, width: 30, totalAXN: currentData?.shrimp?.totalAxn, color: '#e6194B' },\r\n        { key: \"crab\", type: \"Crabs\", count: currentData?.crab?.count, emoji: \"🦀\", totalAXN: currentData?.crab?.totalAxn, color: '#f58231'  },\r\n        { key: \"fish\", type: \"Fish\", count: currentData?.fish?.count, emoji: \"🐠\", totalAXN: currentData?.fish?.totalAxn, color: '#ffe119'  },\r\n        { key: \"octopus\", type: \"Octopuses\", count: currentData?.octopus?.count, emoji: \"🐙\", totalAXN: currentData?.octopus?.totalAxn, color: '#bfef45' },\r\n        { key: \"dolphin\", type: \"Dolphins\", count: currentData?.dolphin?.count, emoji: \"🐬\", totalAXN: currentData?.dolphin?.totalAxn, color: '#3cb44b'  },\r\n        { key: \"tigerShark\", type: \"Tiger Sharks\", count: currentData?.tigerShark?.count, img: true, src: TigerShark, width: 50, totalAXN: currentData?.tigerShark?.totalAxn, color: '#42d4f4' },\r\n        { key: \"greatWhite\", type: \"Great Whites\", count: currentData?.greatWhite?.count, emoji: \"🦈\", totalAXN: currentData?.greatWhite?.totalAxn, color: '#4363d8'  },\r\n        { key: \"whale\", type: \"Whales\", count: currentData?.whale?.count, emoji: \"🐳\", totalAXN: currentData?.whale?.totalAxn, color: '#911eb4'  },\r\n    ]\r\n\r\n    return (\r\n        <div style={{ padding: '2%', paddingBottom: 0 }}>\r\n            <Typography variant=\"h4\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>\r\n                Axion Ecosystem  \r\n                {!currentDataLoading && currentData.totals && (\r\n                   <sup>\r\n                        <Tooltip title={`Last Updated: ${moment(currentData.totals.last_updated).format(\"MMM Do, YYYY, h:mm a\")}. Ecosystem is updated every 10 minutes.`} classes={{ tooltip: 'tooltip' }} placement=\"right\">\r\n                            <InfoOutlinedIcon style={{ fontSize: '0.7rem', cursor: 'pointer' }} color=\"primary\" />\r\n                        </Tooltip>\r\n                   </sup>\r\n                )}\r\n            </Typography>\r\n\r\n            {!currentDataLoading && currentData.totals && (\r\n                <>\r\n                    <Typography variant=\"subtitle1\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>{currentData.totals.holders.toLocaleString()} addresses hold at least 1 AXN.</Typography>\r\n                    \r\n                    <Tooltip title=\"Does not include contracts or dev fund\" classes={{ tooltip: 'tooltip' }} placement=\"bottom\">\r\n                        <Typography variant=\"subtitle1\" align=\"center\" color=\"primary\" style={{ fontWeight: '100', maxWidth: '325px', margin: '0 auto', cursor: 'pointer' }}>\r\n                            Ecosystem Total: {Math.round(currentData.totals.held_axn).toLocaleString()} AXN\r\n                        </Typography>\r\n                    </Tooltip>\r\n                </>\r\n            )}\r\n          \r\n            <div style={{margin: '2%'}}>\r\n                <Grid container justify=\"space-evenly\" spacing={3}>\r\n                    {ecosystem.map(e => (\r\n                        <Grid item lg={3} md={6} xs={10} key={e.type}>\r\n                            <StatCard \r\n                                type={e.type} \r\n                                count={e.count} \r\n                                loading={currentDataLoading} \r\n                                emoji={e.emoji} \r\n                                isImage={e.img ?? false} \r\n                                src={e.img ? e.src : null} \r\n                                imgWidth={e.width} \r\n                                total={e.totalAXN} \r\n                                ecoAxion={currentData?.totals?.held_axn} \r\n                                holders={currentData?.totals?.holders}\r\n                            />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EcosystemBreakdown;","import React from 'react';\r\nimport { Card, CircularProgress, Typography } from \"@material-ui/core\";\r\nimport CardBG from '../../assets/img/card_bg.jpg';\r\n\r\nconst StatCard = ({ stat, amount, loading, suffix }) => {\r\n\r\n    return(\r\n        <Card className=\"card\" elevation={6}>\r\n            <img src={CardBG} width=\"100%\" className=\"cardBG\" alt=\"card background\"/>\r\n\r\n            <div style={{ textAlign: 'center', padding: '1%' }}>           \r\n                <div>\r\n                    <Typography variant=\"h6\" color=\"secondary\" style={{ fontWeight: '400' }}>{stat}</Typography>\r\n                    {loading ? <CircularProgress size={23} /> : (\r\n                        <Typography variant=\"subtitle1\" color=\"secondary\" style={{ fontWeight: '400' }}>{amount} {suffix}</Typography>\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n          \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default StatCard;","import { useEffect, useState } from 'react'\r\n\r\nconst AXION_STAT_UPDATE_KEY = \"AxionStats_AutoUpdate\";\r\n\r\nconst useMarketData = (autoUpdating=true) => {\r\n    const [axnPerEth, setAxnPerEth] = useState(0);\r\n    const [usdtPerAxn, setUsdtPerAxn] = useState(0);\r\n    const [volumeUsd, setVolumeUsd] = useState(0);\r\n    const [volumeEth, setVolumeEth] = useState(0);\r\n    const [marketCap, setMarketCap] = useState(0);\r\n    const [lastUpdated, setLastUpdated] = useState(Date.now());\r\n    const [statUpdater, setStatUpdater] = useState(null);\r\n\r\n    const _getMarketStats = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`stats/volume`).then(result => {\r\n                result.json().then(res => {\r\n                    const VOLUME_USD = res.usd\r\n                    const VOLUME_ETH = res.eth\r\n\r\n                    setVolumeUsd(VOLUME_USD);\r\n                    setVolumeEth(VOLUME_ETH);\r\n                    resolve();\r\n                })\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const _getAxnPerEth = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`stats/axn-eth`).then(result => {\r\n                result.json().then(res => {\r\n                    setAxnPerEth(res.axn);\r\n                    resolve();\r\n                })\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const _getUsdtPerAxn = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`/stats/usdt-axn`).then(result => {\r\n                result.json().then(res => {\r\n                    setUsdtPerAxn(res.usdt);\r\n                    document.title = `Axion Stats | $${res.usdt} USDT`; \r\n                    resolve();\r\n                })\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    const _getCirculatingSupply = () => {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(`/stats/market-cap`).then(result => {\r\n                result.json().then(async (res) => {\r\n                    setMarketCap(res.market_cap)\r\n                    resolve();\r\n                })\r\n            }).catch(err => reject(err))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        _getAxnPerEth();\r\n        _getUsdtPerAxn();\r\n        _getMarketStats();\r\n        _getCirculatingSupply();\r\n        \r\n        if (!statUpdater && localStorage.getItem(AXION_STAT_UPDATE_KEY) === \"1\" && autoUpdating) {\r\n            startAutoUpdating();\r\n            if (process.env.NODE_ENV === \"development\")\r\n                console.log(\"Started stat updater.\")\r\n        }\r\n    // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const startAutoUpdating = () => {\r\n        const updater = setInterval(() => {\r\n            const settingConfirm = localStorage.getItem(AXION_STAT_UPDATE_KEY)\r\n            if (settingConfirm === \"1\") {\r\n                Promise.all([_getAxnPerEth(), _getUsdtPerAxn(), _getMarketStats(), _getCirculatingSupply()]).then(res => {\r\n                    setLastUpdated(Date.now())\r\n                    if (process.env.NODE_ENV === \"development\")\r\n                        console.log(\"Completed stat update\")\r\n                }).catch(err => {\r\n                    if (process.env.NODE_ENV === \"development\")\r\n                        console.log(\"Auto Updating Error:\", err)\r\n                })\r\n            }\r\n        }, 7500)\r\n\r\n        setStatUpdater(updater);\r\n        localStorage.setItem(AXION_STAT_UPDATE_KEY, \"1\")\r\n    }\r\n\r\n    const stopAutoUpdating = () => {\r\n        clearInterval(statUpdater);\r\n        setStatUpdater(null);\r\n        localStorage.setItem(AXION_STAT_UPDATE_KEY, \"0\")\r\n    }\r\n\r\n    const toggleAutoUpdating = () => {\r\n        if (statUpdater)\r\n            stopAutoUpdating();\r\n        else\r\n            startAutoUpdating();\r\n    }\r\n\r\n    return {\r\n        volumeUsd,\r\n        volumeEth,\r\n        axnPerEth,\r\n        marketCap,\r\n        usdtPerAxn,\r\n        lastUpdated,\r\n        autoUpdating: Boolean(statUpdater),\r\n        stopAutoUpdating,\r\n        startAutoUpdating,\r\n        toggleAutoUpdating,\r\n    }\r\n}\r\n\r\nexport default useMarketData;","export default __webpack_public_path__ + \"static/media/logo.5ad1b7a7.png\";","import React from 'react';\r\nimport moment from 'moment';\r\nimport StatCard from './MarketStatCard.js';\r\nimport useMarketData from '../../hooks/useMarketData';\r\nimport { Grid, Switch, Typography, FormControlLabel } from '@material-ui/core';\r\nimport Logo from '../../assets/img/logo.png';\r\n\r\nconst MarketStats = () => {\r\n    const { \r\n        volumeUsd,\r\n        marketCap,\r\n        axnPerEth, \r\n        usdtPerAxn, \r\n        lastUpdated,\r\n        autoUpdating,\r\n        toggleAutoUpdating\r\n    } = useMarketData();\r\n\r\n    return (\r\n        <div style={{ padding: '2%', paddingBottom: 0 }}>\r\n\r\n            <center>\r\n                <img src={Logo} width={60} alt=\"logo\"/>\r\n            </center>\r\n            \r\n            <Typography variant=\"h4\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>Market Stats</Typography>\r\n\r\n            <center>\r\n                <FormControlLabel labelPlacement=\"start\" control={<Switch size=\"small\" checked={autoUpdating} onChange={toggleAutoUpdating} />} label={<Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: '400' }}>Automatically update stats</Typography>} />\r\n                <br/>\r\n\r\n                {lastUpdated && (\r\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: '400' }}>\r\n                        Last Updated: {moment(lastUpdated).format(\"h:mm:ss a\")}\r\n                    </Typography>\r\n                )}\r\n            </center>\r\n\r\n            <div style={{ margin: '2%' }}>\r\n                <Grid container justify=\"space-evenly\" spacing={3}>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"USDTPrice\">\r\n                        <StatCard loading={Boolean(!usdtPerAxn)} stat=\"Current Price\" amount={`$${usdtPerAxn}`} suffix=\"USDT\" />\r\n                    </Grid>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"pricePerETH\">\r\n                        <StatCard loading={Boolean(!axnPerEth)} stat=\"Axion Per ETH\" amount={Number(axnPerEth).toLocaleString()} suffix=\"AXN\"/>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"marketCap\">\r\n                        <StatCard loading={Boolean(!marketCap)} stat=\"Market Cap\" amount={`${Number(marketCap).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}`} suffix=\"USD\" />\r\n                    </Grid>\r\n                    <Grid item lg={3} md={6} xs={10} key=\"volumeETH\">\r\n                        <StatCard loading={Boolean(!volumeUsd)} stat=\"24h Volume\" amount={Number(volumeUsd).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })} suffix=\"USD\"/>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MarketStats;","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button, Dialog, DialogContent, Divider, IconButton, Typography } from '@material-ui/core';\r\n\r\nconst BuyAxionAuctionModal = ({ isOpen, close }) => {\r\n    const openUniswap = () => window.open(\"https://app.uniswap.org/#/swap?outputCurrency=0x7d85e23014f84e6e21d5663acd8751bef3562352\", \"_blank\");\r\n    const openReferral = () => window.open(\"https://stake.axion.network/auction?ref=0xbE42d298d31b2551aE9E6e88B838A3ba5Dc1D6CD\", \"_blank\");\r\n\r\n    return (\r\n        <Dialog open={isOpen} onClose={close}>\r\n            <div style={{ margin: '1%', padding: '2%' }}>\r\n                <Typography variant=\"h6\" color=\"primary\">Axion's 10% Referral Bonus</Typography>\r\n\r\n                <div style={{ position: 'absolute', top: \"5px\", right: \"10px\"}}>\r\n                    <IconButton onClick={close}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <DialogContent>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">By purchasing Axion from the daily auction using my link, you will get a <strong>10% bonus</strong>. Axion from the auction will be automatically staked for 14 days and you must manually claim it afterwards.</Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">Example: If you receive 100,000 AXN from the auction, you will earn a bonus of 10,000 AXN. You will get the total of 110,000 AXN along with any rewards from the stake after you claim it in two weeks.</Typography>\r\n                <br />\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: 400 }}>Upon entering auction, Axion will pledge 1% of your deposit to <span className=\"textLink\" onClick={() => window.open(\"https://edenprojects.org/\", \"_blank\")}>The Eden Reforestation Project</span>, where $0.10 ensures that a tree is planted, and cared for until full maturity. Learn more about the pledge below!</Typography>\r\n\r\n            \r\n            </DialogContent>\r\n            \r\n            <div style={{margin: '2% auto', width: '85%'}}>\r\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={openReferral} autoFocus style={{ textTransform: 'none' }}>\r\n                    Buy From Auction &amp; Get 10% Bonus AXN\r\n                </Button>\r\n                <Button fullWidth onClick={openUniswap} color=\"secondary\" style={{textTransform: 'none'}}>Buy From Uniswap Instead, Instantly</Button>\r\n            </div>\r\n\r\n            <Divider style={{ margin: '0 4% 1% 4%' }} />\r\n\r\n            <div style={{ margin: '2% 5%'}}>\r\n                <Typography variant=\"caption\" color=\"textSecondary\">There is no guarantee that AXN will be cheaper in the auction compared to Uniswap. You will be able to see the current \"bid\" (price) on the auction page before participating. Keep in mind, this can change until the auction closes.</Typography>\r\n            </div>\r\n\r\n\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default BuyAxionAuctionModal;","import React, { useState } from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport BuyAxionAuctionModal from './BuyAxionAuctionModal';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Typography, AppBar, Toolbar, IconButton, Grid, Menu, MenuItem, Button } from '@material-ui/core';\r\n\r\nconst Header = () => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    const theme = useTheme();\r\n    const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const openWebsite = () => window.open(\"https://axion.network\", \"_blank\");\r\n    const openReferral = () => {\r\n        setModalOpen(true);\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const handleClick = (event) => { setAnchorEl(event.currentTarget) }\r\n    const handleClose = () => { setAnchorEl(null) }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className=\"navBar\" elevation={10} >\r\n                <Toolbar>\r\n\r\n                    <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Typography variant=\"h5\" align=\"center\" color=\"primary\" style={{ fontWeight: '100', color: \"#FFF\" }}>Axion Stats</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {!isSmall && (\r\n                                <div className=\"headerLinks\">\r\n                                    <Typography onClick={openWebsite} variant=\"subtitle2\" style={{ color: \"#FFF\" }} display=\"inline\" className=\"clickableLink noselect\">Axion Website</Typography>\r\n\r\n                                    <Button onClick={openReferral} variant=\"contained\" color=\"secondary\" className=\"referralButton\">\r\n                                        <Typography variant=\"subtitle2\">Buy Axion, Get 10% Bonus</Typography>\r\n                                    </Button>\r\n                                </div>\r\n                            )}\r\n\r\n                            {isSmall && (<>\r\n                                <IconButton edge=\"start\" color=\"inherit\" onClick={handleClick}>\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n\r\n                                <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{padding: 0, margin: 0}}>\r\n                                    <MenuItem onClick={openWebsite}>Axion Website</MenuItem>\r\n                                    <MenuItem onClick={openReferral}>Buy Axion - 10% Bonus</MenuItem>\r\n                                </Menu>\r\n                            </>)}\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <BuyAxionAuctionModal isOpen={modalOpen} close={() => setModalOpen(false)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Typography, Accordion, AccordionSummary, AccordionDetails, Grid, Divider } from '@material-ui/core';\r\nimport useMarketData from '../../hooks/useMarketData';\r\n\r\nconst OFFICIAL_LINKS = [\r\n    { link: \"https://axion.network/\", title: \"Homepage\" },\r\n    { link: \"https://stake.axion.network/\", title: \"Staking Portal\" },\r\n    { link: \"https://axion.network/pdf/axion-whitepaper.pdf\", title: \"Whitepaper\" },\r\n    { link: \"https://axion.network/pdf/axion-audit.pdf\", title: \"Hacken Audit\" },\r\n    { link: \"https://axion.network/pdf/certik-audit-report.pdf\", title: \"Certik Audit\" },\r\n]\r\n\r\nconst SOCIAL_LINKS = [\r\n    { link: \"https://axionnetwork.medium.com/\", title: \"Blog\" },\r\n    { link: \"https://www.relaxionwithaxion.com/\", title: \"News\" },\r\n    { link: \"https://twitter.com/axion_network\", title: \"Twitter\" },\r\n    { link: \"https://t.me/axionofficial\", title: \"Telegram\" },\r\n    { link: \"https://discord.gg/axion\", title: \"Discord\" },\r\n    { link: \"https://github.com/Rock-n-Block/axion-contracts\", title: \"GitHub\" },\r\n]\r\n\r\nconst VIDEO_LINKS = [\r\n    { link: \"https://www.youtube.com/watch?v=-ILQ1M5KS68&ab_channel=Numberofthings\", title: \"What is Axion?\", length: \"2:06\" },\r\n    { link: \"https://www.youtube.com/watch?v=mlGwBPltsK8&ab_channel=Numberofthings\", title: \"Brief Axion Overview\", length: \"1:42\"  },\r\n    { link: \"https://www.youtube.com/watch?v=qfCftkf-svQ\", title: \"Axion Promotional Video\", length: \"0:29\" },\r\n    { link: \"https://www.youtube.com/watch?v=hj5ZewGkAOA\", title: \"Axion Intro for Beginners\", length: \"11:00\" },\r\n    { link: \"https://www.youtube.com/watch?v=B4lzW02pwew&ab_channel=AxionToken\", title: \"Whitepaper Explained\", length: \"50:29\" },\r\n]\r\n\r\nconst LIVE_CHARTS = [\r\n    { link: \"https://www.dextools.io/app/uniswap/pair-explorer/0x0d0f908ad29bd8a9f8d99533e3ad69e2e40f3094\", title: \"DexTools.io\" },\r\n    { link: \"https://chartex.pro/?symbol=UNISWAP:AXN&theme=Dark\", title: \"ChartEx.pro\" },\r\n    { link: \"https://www.coingecko.com/en/coins/axion\", title: \"CoinGecko\" },\r\n    // { link: \"https://charts.cointrader.pro/charts.html?coin=HEX2T%3ABTC\", title: \"CoinTrader.pro (AXN/BTC)\" },\r\n]\r\n\r\nconst openWindow = url => { \r\n    const newURL = url.includes(\"dextools\") ? url : url + \"?utm_source=AxionStats.info\";\r\n    window.open(newURL, \"_blank\") \r\n}\r\n\r\nconst LinkHeader = ({title}) => {\r\n    return (\r\n        <>\r\n            <Divider variant=\"middle\" style={{ margin: '2%' }} />\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"secondary\" style={{ fontWeight: '400' }}>{title}</Typography>\r\n            <Divider variant=\"middle\" style={{ margin: '2%' }} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst CustomAccordion = ({title, children}) => {\r\n    return (\r\n        <Accordion elevation={6} style={{marginBottom: '2%'}}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                <Typography>{title}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{display: 'block'}}>\r\n                {children}\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nconst FreeClaims = () => {\r\n    const { usdtPerAxn } = useMarketData(false);\r\n\r\n    return (\r\n        <CustomAccordion title=\"How Do HEX Freeclaims Work?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                HEX Freeclaims will be available over a 350 day period, beginning at launch of mainnet.\r\n                Each ETH address containing HEX on May 28th, 2020, staked or unstaked, will be able to claim <strong>free Axion</strong> at a value of 1:1 for your HEX balance with a <strong>maximum cap of 10 million tokens</strong>.\r\n                At today's prices, that's up to ${Number(10000000 * usdtPerAxn).toLocaleString()}!\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Day 1 claims will begin at a rate of 100% of your HEX balance, with each successive week decreasing by cumulative 2% (0.2857% penalty applied daily).\r\n                If you missed the available freeclaim period (After Day 350), you would receive 0% (0 Axion) and all of your freeclaim amount would be sent to the auction pool.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" style={{ border: '1px dashed rgba(0,0,0, 0.54)', borderRadius: '10px', padding: '1%' }}>\r\n                Penalty = (HEX + Shares amount) * (days since freeclaim starts/350)\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Example: If your ETH address contained Hex balance of 100,000 and you choose to claim on Day #1 you will receive 100,000 Axion and no Axion will be sent to the auction pool.\r\n                If you wait to claim until Day #14 you would receive 96% or 96,000 Axion and remaining 4,000 Axion would be sent to the auction pool. Day #21 = 94%, Day #28 = 92%, and so on.\r\n            </Typography>\r\n        </CustomAccordion>  \r\n    )\r\n}\r\n\r\nconst BigPayDays = () => {\r\n    return (\r\n        <CustomAccordion title=\"What Are Big Pay Days (BPD)?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Axion has 5 different \"BigPayDays\".\r\n                The concept of having a BigPayDay is to allocate the unclaimed freeclaim Axion tokens to the stakers at the BigPayDays. Each of these days is exactly 350 days apart.\r\n                BigPayDay funding comes from 0.2857% (1/350) of the unclaimed Axion.\r\n                            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                On BigPayDays which happen once every year (for 5 years), all tokens in the BigPayDay pool are added to the Payout Pool for that day.\r\n                Stakers who are staked on that day are entitled to payout based on how much of the share pool they own.\r\n                            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Only stakes which are staked for periods above 350 days, and are active once BPD hits, will be eligible for the BigPayDay Payout.\r\n                This means if you stake 3 days before the BPD, for a total period of at LEAST 350 days, you would be eligible for the BigPayDay, and will recieve that bonus when your stake ends.\r\n                            </Typography>\r\n            <LinkHeader title=\"Distribution Amounts\" />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 1: 10% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 2: 15% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 3: 20% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 4: 25% of the BPD Tokens are distributed</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">Year 5: 30% of the BPD Tokens are distributed</Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Links = () => {\r\n    return (\r\n        <CustomAccordion title=\"A Lot of Helpful Links...\">\r\n            <Grid container>\r\n                <Grid item xs={12}><LinkHeader title=\"Official Links\" /></Grid>\r\n                {OFFICIAL_LINKS.map(l => <Grid item xs={6} key={l.title}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLink\">{l.title}</Typography></Grid>)}\r\n\r\n                <Grid item xs={12}><LinkHeader title=\"Social Links\" /></Grid>\r\n                {SOCIAL_LINKS.map(l => <Grid item xs={6} key={l.title}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLink\">{l.title}</Typography> </Grid>)}\r\n\r\n                <Grid item xs={12}><LinkHeader title=\"Videos from the Community\" /></Grid>\r\n                {VIDEO_LINKS.map(l => <Grid item xs={12} key={l.title}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLinkDense\">{l.title} ({l.length})</Typography></Grid>)}\r\n\r\n                <Grid item xs={12}><LinkHeader title=\"Live Charts\" /></Grid>\r\n                {LIVE_CHARTS.map(l => <Grid item xs={6} key={l.title}><Typography onClick={() => openWindow(l.link)} align=\"center\" variant=\"subtitle2\" color=\"textSecondary\" className=\"linksSectionLink\">{l.title}</Typography></Grid>)}\r\n            </Grid>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Wallets = () => {\r\n    return (\r\n        <CustomAccordion title=\"Which Wallets Can I Use?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Axion's mainnet token is ERC20. \r\n                Our recommended wallet would be <span className=\"textLink\" onClick={() => openWindow(\"https://metamask.io/\")}>Metamask</span> as it will be <strong>the only supported wallet initially</strong>. \r\n                Other wallets will be supported after. As for mobile users, use the Metamask mobile app.\r\n            </Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Supply = () => {\r\n    return (\r\n        <CustomAccordion title=\"What is the Maximum Supply?\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Max supply of the presale token HEX2T is 250 Billion, which will be converted 1:1 on mainnet launch, and another 250 Billion will be allocated to HEX freeclaims &amp; auctions, for a initial total supply of 500 Billion Axion. \r\n            </Typography>\r\n            <br/>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                Following a seriously of unfortunate event (the <span className=\"textLink\" onClick={() => openWindow(\"https://cointelegraph.com/news/certik-dissects-the-axion-network-incident-and-subsequent-price-crash\")}>exploit</span>), HEX3T was issued via airdrop after a rollback. Everyone holding HEX2T or AXN before the hack received 1:1 compensation in HEX3T.  The only function of HEX3T is to convert it to AXN.\r\n            </Typography>\r\n            <br />\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n                The additional 250B for freeclaims and auctions will enter the supply slowly. \r\n                The only other coins that will come into existence after distribution phase are the coins created by the 8% inflation rate, 100% of coins created through inflation are given to stakers.\r\n            </Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst Tokenomics = () => {\r\n    return (\r\n        <CustomAccordion title=\"Axion Tokenomics Overview\">\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>If HEX3T converted Axion tokens go unclaimed, they go up for auction.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>Every week that HEX3T tokens go unconverted, the HEX3T holder loses 2% of the total amount they receive from conversion.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>This 2% is added into the auction.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>People can bid ETH into the auction pool to purchase the Axion. Whatever % of the auction pool value they have bid, that is the % of the Axion pool they will earn.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>80% of all ETH bid into the auction pool is used to buy back Axion tokens on exchanges, increasing the value.</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{marginBottom: '2%'}}>The tokens that are bought back, are then distributed to stakers.</Typography>\r\n        </CustomAccordion>\r\n    )\r\n}\r\n\r\nconst LinksAndResources = () => {\r\n    return (\r\n        <div style={{ padding: '2%', paddingBottom: 0 }}>\r\n            <Typography variant=\"h4\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>Frequently Asked Questions</Typography>\r\n            <Grid container spacing={2} style={{ width: '90%', margin: '2% auto' }}>\r\n                <Grid item md={6} xs={12} container direction=\"column\">\r\n                    <Links/>\r\n                    <Wallets/>\r\n                    <Supply/>\r\n                </Grid>\r\n                <Grid item md={6} xs={12} container direction=\"column\">\r\n                    <FreeClaims />\r\n                    <BigPayDays />\r\n                    <Tokenomics/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinksAndResources;","export default __webpack_public_path__ + \"static/media/eden.27b887d7.jpg\";","export default __webpack_public_path__ + \"static/media/eden-logo.89258517.png\";","import React, { useEffect, useState } from 'react';\r\nimport CardBG from '../../assets/img/card_bg.jpg';\r\nimport { Grid, Typography, Card, CircularProgress, Accordion, AccordionSummary, AccordionDetails, Divider } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CountUp from 'react-countup';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport eden from '../../assets/img/eden.jpg';\r\nimport edenLoogo from '../../assets/img/eden-logo.png';\r\n\r\nconst MESSAGE = {\r\n    col1:[\r\n        'I am wildly passionate about reforestation, biodiversity, saving animals, and creating a healthy and thriving planet for future generations. When I see plastics, pollutants, and deforestation running rampant in our world, animals dying, and ecosystems going extinct, it pains me more than anything else.',\r\n        'Around the world, animals are helpless to the destructive effects of humanity. As a species, we have become the catalysts of mass - extinction, and it’s only going to get worse, unless we do something about it.',\r\n        'I believe that reforestation is the key. Creating an ecosystem, where animals are free to live without human interference not only benefits the animals, but the soil, the frequency of rainfall, and can absolutely transform the landscape. Humans rely on animals a lot more than we’d like to admit, it’s in our best interest. Deserts can be turned into lush forests, it just takes intentional effort.',\r\n    ],\r\n    col2: [\r\n        'This 1% does not affect anything involved in the Axion ecosystem, it is not part of the 80% for buybacks and staking, and it does not require anyone to donate, nor to have any opportunity-loss.',\r\n        'Just know that when you enter that auction, you are not only carving out a better future for yourself, but for the world around you as well.'\r\n    ]\r\n}\r\nconst TreeStats = () => {\r\n    const [numTrees, setNumTrees] = useState(0);\r\n    const [amountDonated, setAmountDonated] = useState(0);\r\n    const [ethDonated, setEthDonated] = useState(0);\r\n\r\n    const theme = useTheme();\r\n    const isSmall = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const isMedium = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const _fetchTreeCount = async () => {\r\n        let res = await fetch('auction/trees');\r\n        let res_json = await res.json();\r\n        setNumTrees(res_json.trees)\r\n        setAmountDonated(res_json.amount)\r\n        setEthDonated(res_json.eth)\r\n    }\r\n    useEffect(() => {\r\n        _fetchTreeCount();\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ padding: '2%', paddingBottom: 0 }}>            \r\n            <Typography variant=\"h4\" align=\"center\" color=\"primary\" style={{ fontWeight: '100' }}>🌳 Jack's Pledge</Typography>\r\n         \r\n            <div style={{ width: isSmall ? '80%' : (isMedium ? '60%' : '40%'), margin: '2% auto'}}>\r\n                <Card className=\"card\" elevation={6}>\r\n                    <img src={eden} style={{ width: '100%' }} alt=\"card background\" />\r\n                    <div style={{ textAlign: 'center', padding: '1%' }}>\r\n                        <Typography variant=\"h5\" color=\"secondary\" style={{ fontWeight: '400' }}>Axion Has Contributed</Typography>\r\n                      \r\n                        {numTrees === 0 ? <CircularProgress size={23} /> : (\r\n                            <CountUp start={0} end={numTrees} delay={0}>\r\n                                {({ countUpRef }) => <Typography variant=\"h4\" color=\"secondary\" style={{ fontWeight: '400', display: 'inline' }} innerRef={countUpRef} />}\r\n                            </CountUp>\r\n                        )}\r\n\r\n                        <Typography variant=\"h4\" color=\"secondary\" style={{ fontWeight: '400', display: 'inline' }}>&nbsp;Trees</Typography>\r\n                        <br/>\r\n\r\n                        {amountDonated !== 0 && (\r\n                            <Typography variant=\"subtitle1\" color=\"secondary\" style={{ fontWeight: '400', margin: '2% 0' }}>\r\n                                Since November 14, 2020,&nbsp;\r\n                                {amountDonated.toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })} ({ethDonated.toLocaleString()} ETH) has been pledged to reforestation.\r\n                            </Typography>\r\n                        )}\r\n                    </div>\r\n                </Card>\r\n            \r\n                <Accordion elevation={6} style={{ marginTop: '4%' }}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography variant=\"subtitle1\" color=\"textPrimary\">A Message From Axion's Founder</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ display: 'block' }}>\r\n                        {MESSAGE.col1.map(m => <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginBottom: '2%', fontWeight: 400, fontStyle: 'italic' }}>{m}</Typography>)}\r\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"subtitle2\" style={{ fontWeight: 400 }}>~ Axion Founder, Jack (<span className=\"textLink\" onClick={() => window.open(\"https://i.imgur.com/ZbIqRap.png\", \"_blank\")}>source</span>)</Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion elevation={6} style={{ marginTop: '2%' }}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography>Jack's Tree Pledge</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ display: 'block' }}>\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginBottom: '2%', fontWeight: 400, fontStyle: 'italic' }}>\r\n                                I personally pledge that 1% of all ETH that goes into the auction will be donated to <span style={{ fontWeight: 'bold' }} className=\"textLink\" onClick={() => window.open(\"https://edenprojects.org/\", \"_blank\")}>The Eden Reforestation Project</span>,\r\n                                where $0.10 ensures that a tree is planted, and cared for until full maturity. In the process, this employs thousands of\r\n                                people living in poverty in developed nations, and gives them newfound hope in their lives. The Eden Reforestation Program is absolutely incredible.\r\n                            </Typography>\r\n                        {MESSAGE.col2.map(m => <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginBottom: '2%', fontWeight: 400, fontStyle: 'italic' }}>{m}</Typography>)}\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginBottom: '2%', fontWeight: 400, fontStyle: 'italic' }}>I highly suggest giving <span style={{ fontWeight: 'bold' }} className=\"textLink\" onClick={() => window.open(\"https://youtu.be/goKinj8ya-E\", \"_blank\")}>this video</span> a watch.</Typography>\r\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"subtitle2\" style={{ fontWeight: 400 }}>~ Axion Founder, Jack (<span className=\"textLink\" onClick={() => window.open(\"https://i.imgur.com/ZbIqRap.png\", \"_blank\")}>source</span>)</Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion elevation={6} style={{ marginTop: '2%' }}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography>About The Eden Reforestation Project</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ display: 'block' }}>\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginBottom: '2%', fontWeight: 400 }}>\r\n                            <span style={{ fontWeight: 'bold' }} className=\"textLink\" onClick={() => window.open(\"https://edenprojects.org/\", \"_blank\")}>Eden Reforestation Projects</span>&nbsp;is a 501c3 non-profit whose mission is to provide fair wage employment to impoverished villagers as agents of global forest restoration. \r\n                            They hire the poorest of the poor to grow, plant, and guard to maturity native species forest on a massive scale. \r\n                            Their \"employ to plant methodology\" results in a multiplication of positive socio-economic and environment measures.\r\n                        </Typography>\r\n\r\n                        <center>\r\n                            <img src={edenLoogo} style={{ width: '50%', margin: '2% 0' }} alt=\"card background\" />\r\n                        </center>\r\n\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginBottom: '2%', fontWeight: 400 }}>\r\n                            By the year 2025 their objective is to plant a minimum of 500 million trees each year and to offer hope through the employment of tens of thousands of people in countries where extreme poverty is rampant.\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginBottom: '2%', fontWeight: 400 }}>\r\n                            By keeping overhead costs low, they are now recognized as one of the most cost-effective reforestation projects on the planet.\r\n                            While their primary goal is to lift people out of extreme poverty, they have also become a model for environmental restoration and land management.\r\n                        </Typography>\r\n\r\n                        <Divider style={{margin: '3% auto', width: '75%'}} />\r\n                        <Typography color=\"primary\" variant=\"subtitle2\" style={{fontWeight: 400}} align=\"center\">\r\n                            <span className=\"clickableLink\" onClick={() => window.open(\"https://edenprojects.org/\", \"_blank\")}>For more information, visit EdenProjects.org</span>\r\n                            <br />\r\n                            <span className=\"clickableLink\" onClick={() => window.open(\"https://youtu.be/goKinj8ya-E\", \"_blank\")}>Eden Reforestation Projects - Plant Trees Save Lives</span>\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n                <Accordion elevation={6} style={{ marginTop: '2%' }}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                        <Typography>About this Count</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails style={{ display: 'block' }}>\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ fontWeight: 400 }}>\r\n                            The numbers you see above are simply an estimate based on numbers from the blockchain. \r\n                            They are not meant to be exact stats.\r\n                            Actual numbers will vary and can be added here if they become available.\r\n                            The count is realtime, and will gradually change as the price of ETH changes.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"primary\" style={{ marginTop: '2%' }}>How is this calculated?</Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginTop: '2%', fontWeight: 400 }}>\r\n                            For every deposit into Axion's daily or weekly auction, 80% of the ETH gets used to buyback and distribute Axion (AXN) to stakers and 20% goes to Jack. \r\n                            From Jack's share, 19% will go towards expenses &amp; ecosystem expansion, and 1% has been pledged to the Eden Reforestation Project.\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"primary\" style={{ marginTop: '2%', fontWeight: 400 }}>\r\n                            To calculate, I simply take 1% of the total recieved amount to Jack's address and convert that amount to USD. Trees are roughly $0.10 each, so some basic math and you have the answer.</Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TreeStats;","import React from 'react';\r\nimport EcosystemBreakdown from './views/ecosystem_breakdown/EcosystemBreakdown';\r\nimport MarketStats from './views/market_stats/MarketStats';\r\nimport Header from './views/header/Header'\r\nimport { Typography } from '@material-ui/core';\r\nimport LinksAndResources from './views/resources/LinksAndResources';\r\nimport TreeStats from './views/tree_stats/TreeStats';\r\n\r\nconst VERSION = \"v1.1\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <MarketStats/>\r\n            <EcosystemBreakdown/>\r\n            <TreeStats />\r\n            <LinksAndResources/>\r\n\r\n            <div style={{ margin: '1%', textAlign: 'right', marginTop: 0, opacity: 0.85 }}>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: 200 }}>{VERSION} ✳️</Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" style={{ fontWeight: 200 }}>By Some Green Guy</Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n        fontFamily: \"Poppins, sans-serif\",\r\n    },\r\n    palette: {\r\n        common: {\r\n            black: \"#000\",\r\n            white: \"#fff\"\r\n        },\r\n        background: {\r\n            paper: \"#EAEEF7\",\r\n            default: \"#EAEEF7\"\r\n        },\r\n        primary: {\r\n            light: \"#4c598e\",\r\n            main: \"#4c598e\",\r\n            dark: \"#6D7BB9\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        secondary: {\r\n            fontFamily: \"Roberto, sans-serif\",\r\n            light: \"#8E9CDA\",\r\n            main: \"#6D7BB9\",\r\n            dark: \"#505E9B\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        error: {\r\n            light: \"#ff9caa\",\r\n            main: \"#ff7285\",\r\n            dark: \"#b3505d\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        success: {\r\n            light: \"#6dc762\",\r\n            main: \"#09af00\",\r\n            dark: \"#007d00\",\r\n            contrastText: \"#fff\"\r\n        },\r\n        text: {\r\n            primary: \"rgba(0,0,0, 0.87)\",\r\n            secondary: \"rgba(0,0,0, 0.54)\",\r\n            disabled: \"rgba(0,0,0, 0.38)\",\r\n            hint: \"rgba(0,0,0, 0.38)\"\r\n        }\r\n    }\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport Home from './home';\nimport theme from './theme';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiThemeProvider, CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SnackbarProvider maxSnack={3} preventDuplicate>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline>\n          <Home />\n        </CssBaseline>\n      </MuiThemeProvider>\n    </SnackbarProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}